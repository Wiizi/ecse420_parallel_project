
import java.awt.Dimension;
import java.awt.GridBagLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Andoni Roman
 */
public class mainUI extends javax.swing.JFrame {
    
    /**
     * GLOBALS
     */
    public String file_path = null;
    
    public int maximum_preview_height = 630; 
    
    public int maximum_preview_width = 920; 
    
    public BufferedImage loaded_original;
            
    /**
     * Creates new form mainUI
     */
    public mainUI() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        editing_menu = new javax.swing.JFrame();
        image_label = new javax.swing.JLabel();
        back_to_menu = new javax.swing.JButton();
        filter_1 = new javax.swing.JButton();
        Filter_2 = new javax.swing.JButton();
        filter_3 = new javax.swing.JButton();
        filter_4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        file_choice_button = new javax.swing.JButton();
        start_button = new javax.swing.JButton();
        text_field = new javax.swing.JTextField();
        bg = new javax.swing.JLabel();

        editing_menu.setMinimumSize(new java.awt.Dimension(1280, 800));
        editing_menu.setSize(new java.awt.Dimension(1280, 800));
        editing_menu.getContentPane().setLayout(null);

        image_label.setMaximumSize(new java.awt.Dimension(920, 630));
        image_label.setMinimumSize(new java.awt.Dimension(100, 100));
        editing_menu.getContentPane().add(image_label);
        image_label.setBounds(60, 100, 890, 520);

        back_to_menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui_elements/back_to_main.png"))); // NOI18N
        back_to_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                back_to_menuMouseClicked(evt);
            }
        });
        back_to_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_to_menuActionPerformed(evt);
            }
        });
        editing_menu.getContentPane().add(back_to_menu);
        back_to_menu.setBounds(20, 30, 230, 30);

        filter_1.setText("Filter_1");
        filter_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filter_1ActionPerformed(evt);
            }
        });
        editing_menu.getContentPane().add(filter_1);
        filter_1.setBounds(1050, 130, 110, 30);

        Filter_2.setText("Filter_2");
        editing_menu.getContentPane().add(Filter_2);
        Filter_2.setBounds(1050, 170, 110, 30);

        filter_3.setText("Filter_3");
        editing_menu.getContentPane().add(filter_3);
        filter_3.setBounds(1050, 210, 110, 30);

        filter_4.setText("Filter_4");
        filter_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filter_4ActionPerformed(evt);
            }
        });
        editing_menu.getContentPane().add(filter_4);
        filter_4.setBounds(1050, 250, 110, 29);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui_elements/background_frosted.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setMaximumSize(new java.awt.Dimension(1280, 800));
        jLabel1.setMinimumSize(new java.awt.Dimension(1280, 800));
        editing_menu.getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1280, 800);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1280, 800));
        setSize(new java.awt.Dimension(1280, 800));
        getContentPane().setLayout(null);

        title.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui_elements/title.png"))); // NOI18N
        getContentPane().add(title);
        title.setBounds(340, -10, 1010, 160);

        file_choice_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui_elements/browse_button.png"))); // NOI18N
        file_choice_button.setText("jButton1");
        file_choice_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_choice_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(file_choice_button);
        file_choice_button.setBounds(860, 410, 190, 40);

        start_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui_elements/start_button.png"))); // NOI18N
        start_button.setText("jButton2");
        start_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                start_buttonMouseClicked(evt);
            }
        });
        getContentPane().add(start_button);
        start_button.setBounds(860, 510, 130, 40);

        text_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_fieldActionPerformed(evt);
            }
        });
        getContentPane().add(text_field);
        text_field.setBounds(310, 410, 540, 40);

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui_elements/background.jpg"))); // NOI18N
        bg.setText("jLabel1");
        getContentPane().add(bg);
        bg.setBounds(0, 0, 1290, 950);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Handler for the editing menu
     */
    private void handle_editing_menu()
    {
        Image img;
        int img_width = 0;
        int img_height = 0;
        int new_img_width = 0;
        int new_img_height = 0;
        
        // open image file, analyze the sizes and try to fit
        try
        {
            loaded_original = ImageIO.read(new File(file_path));

            img_width = loaded_original.getWidth();
            new_img_width = img_width;
            System.out.println("Log: Image width: " + new_img_width);
            img_height = loaded_original.getHeight();
            new_img_height = img_height;
            System.out.println("Log: Image height: " + new_img_height);
            
            //avoid overfilling the page, keep the sizes smaller than thresholds 
            //decision is made on mutually exclusive cases
            if (img_width > maximum_preview_width || img_height > maximum_preview_height)
            {
                if(img_width > maximum_preview_width && !(img_height > maximum_preview_height))
                {
                    System.out.println("Log: Image too big for preview, resizing based on width!");
                    double proportion = (double)img_width/(double)maximum_preview_width;
                    double remainder = 1 - proportion;
                    new_img_width = (int) ((int) img_width * remainder);
                    new_img_height = (int) ((int) img_height * remainder);
                }
                else if (img_height > maximum_preview_height && !(img_width > maximum_preview_width))
                {
                    System.out.println("Log: Image too big for preview, resizing! base on height");
                    double proportion = (double)img_height/(double)maximum_preview_height;
                    double remainder = 1 - proportion;
                    new_img_width = (int) ((int) img_width * remainder);
                    new_img_height = (int) ((int) img_height * remainder);
                }
                else if (img_height > maximum_preview_height && img_width > maximum_preview_width)
                {
                    System.out.println("Log: Image too big for preview, resizing! base on height AND width");
                    double proportion_width = (double)img_width/(double)maximum_preview_width;
                    System.out.println("Log: Prop width:" + proportion_width);

                    double proportion_height = (double)img_height/(double)maximum_preview_height;
                    System.out.println("Log: Prop height:" + proportion_height);


                    
                    double biggest = proportion_width;
                    if (proportion_width<proportion_height)
                    {
                        biggest = proportion_height;
                    }
                    
                    System.out.println("Biggest prop chosen: " + biggest);
                    double remainder = biggest - 1;
                    remainder = 1 - remainder;
                    System.out.println("Remainder: " + remainder);
                    new_img_width = (int) ((int) img_width * remainder);
                    new_img_height = (int) ((int) img_height * remainder);
                    System.out.println("Log: NEW height:" + new_img_height);
                    System.out.println("Log: NEW width:" + new_img_width);
         
                }
            }
            
                //SET LABLE
            Dimension size = new Dimension(maximum_preview_width, maximum_preview_height);
            image_label.setSize(size);

            image_label.setLayout(new GridBagLayout());
            
            ImageIcon imag = new ImageIcon(file_path);
            Image image = imag.getImage(); // transform it 
            Image newimg = image.getScaledInstance(new_img_width, new_img_height,  java.awt.Image.SCALE_SMOOTH);
            imag = new ImageIcon(newimg);
            
            JLabel label = new JLabel(imag);
            label.setHorizontalAlignment(SwingConstants.CENTER);
            label.setVerticalAlignment(SwingConstants.BOTTOM);
            //image_label.add(label);
            image_label.setIcon(imag);
        }
        catch (IOException ex)
        {
            System.out.println("Log: ERROR OPENING THE FILE....CRITICAL.");
            Logger.getLogger(mainUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }
    /**
     * Simply shows the path of the chosen file
     * @param evt 
     */
    private void text_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_fieldActionPerformed
    
    /**
     * File chooser handler
     * @param evt 
     */
    private void file_choice_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_choice_buttonActionPerformed
        // TODO add your handling code here:
        System.out.println("Log: Choosing an image....");
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File chosen_image = chooser.getSelectedFile();
        if(chosen_image != null)
        {
            System.out.println("Log: Image chosen successfully!.");
            file_path = chosen_image.getAbsolutePath();
            text_field.setText(file_path);
        }
        else
        {
            System.out.println("Log: Cancelled action on FileChoser.");
        }
    }//GEN-LAST:event_file_choice_buttonActionPerformed

    private void start_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_start_buttonMouseClicked
        // TODO add your handling code here:

        if(file_path != null)
        {
            String[] tokens = file_path.split("\\.(?=[^\\.]+$)");
            String extension = tokens[tokens.length - 1];
            boolean is_a_png = false;

            if (extension.equals("png"))
            {
                is_a_png = true;
                editing_menu.setVisible(true);
                this.setVisible(false);
                System.out.println("Log: Image chosen @ " + file_path);
   
            }

            if(is_a_png)
            {
                System.out.println("Log: Valid file, proceed to filtering!");
                handle_editing_menu();
            }
            else
            {
                System.out.println("Log: ERROR: Invalid file extention.");
                JOptionPane.showMessageDialog(rootPane, "Invalid file extention. Make sure you select a PNG image.");
            }
        }
        else
        {
            System.out.println("Log: ERROR: Can't start, no file found!!!!");
            JOptionPane.showMessageDialog(rootPane, "No image was selected! Please select an image.");
        }
    }//GEN-LAST:event_start_buttonMouseClicked

    private void filter_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filter_4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filter_4ActionPerformed

    private void filter_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filter_1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filter_1ActionPerformed

    private void back_to_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_to_menuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_back_to_menuActionPerformed
    
    /**
     * Back to the main menu button handler.
     * @param evt 
     */
    private void back_to_menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_to_menuMouseClicked
        file_path = null;
        text_field.setText(null);
        editing_menu.setVisible(false);
        System.out.println("Log: Back to main!");
        this.setVisible(true);
        image_label.removeAll();
    }//GEN-LAST:event_back_to_menuMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Filter_2;
    private javax.swing.JButton back_to_menu;
    private javax.swing.JLabel bg;
    private javax.swing.JFrame editing_menu;
    private javax.swing.JButton file_choice_button;
    private javax.swing.JButton filter_1;
    private javax.swing.JButton filter_3;
    private javax.swing.JButton filter_4;
    private javax.swing.JLabel image_label;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton start_button;
    private javax.swing.JTextField text_field;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
